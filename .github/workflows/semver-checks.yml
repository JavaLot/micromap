# SPDX-FileCopyrightText: Copyright (c) 2023-2025 Yegor Bugayenko
# SPDX-FileCopyrightText: Copyright (c) 2025 owtotwo
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
name: semver-checks
on:
  workflow_dispatch:
  push:
    branches:
      - master
jobs:
  semver-checks:
    timeout-minutes: 15
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Extract version hint from Cargo.toml
        id: extract_hint
        run: |
          # Extract the comment content in a specific format after the "version" field
          version_hint="$(grep '^version = ' Cargo.toml | sed -E 's/.*# hint: ([^ ]+)/\1/')"
          if [[ "$version_hint" == "version = "* ]]; then
            version_hint=""
          else
            echo "Extracted version hint: $version_hint"
          fi
          echo "version_hint=$version_hint" >> "$GITHUB_ENV"
      - name: Show extracted version_hint and set it as dest_version to env
        run: |
          if [ -n "${{ env.version_hint }}" ]; then
            echo "::notice::Version hint: ${{ env.version_hint }}"
            echo "dest_version=${{ env.version_hint }}" >> "$GITHUB_ENV"
          else
            echo "::notice::No comment version_hint found."
          fi
      - name: Get newest version from crates.io
        id: fetch_version
        if: "${{ env.dest_version == '' }}"
        run: |
          response="$(curl -s https://crates.io/api/v1/crates/micromap)"
          newset_version="$(echo "$response" | jq -r '.crate.newest_version')"
          echo "::notice::Newest version fetch from crates.io is: \`$newset_version\`"
          echo "dest_version=$newset_version" >> "$GITHUB_ENV"
      - name: Replace version in Cargo.toml
        run: |
          sed -i 's/^version = "0.0.0"/version = "'${{ env.dest_version }}'"/' Cargo.toml
          echo "Updated Cargo.toml with version: ${{ env.dest_version }}"
          echo "::notice::Use version \`${{ env.dest_version }}\` for cargo-semver-checks."
      - name: Run cargo-semver-checks
        id: semverchecks
        continue-on-error: true
        uses: obi1kenobi/cargo-semver-checks-action@v2
        with:
          feature-group: all-features
      - name: note the solution for the failure of cargo-semver-checks
        if: ${{ contains(steps.semverchecks.outcome, 'failure') }}
        run: |
          printf "::error::cargo-semver-checks failed, please add the hint comment to the \`package.version\` line in Cargo.toml file. Or you don't want to update the version, please check your code and find why cargo-semver-checks failed.\n"
          printf "::warning::The comment version hint line should be like: version = \"0.0.0\" # hint: <new_version>\n"
          exit 1
      - name: use cargo
        if: ${{ env.version_hint }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Update the README.md
        if: ${{ env.version_hint }}
        run: sed -E -i "s/micromap = \"[^\"]+\"/micromap = \"${{ env.version_hint }}\"/g" README.md
      - name: Reset the version placeholder in Cargo.toml
        if: ${{ env.version_hint }}
        run: |
          sed -i -E 's/^(version = ")[^"]+(".*# hint: .*)$/\10.0.0"/' Cargo.toml
      - name: Update the Cargo.lock
        if: ${{ env.version_hint }}
        run: |
          cargo update --package micromap
      - name: Create a PR for version update reminder
        if: ${{ env.version_hint }}
        uses: peter-evans/create-pull-request@v7
        with:
          title: 'The version needs to be updated to ${{ env.version_hint }}'
          sign-commits: true
          branch: semver-checks
          delete-branch: true
          assignees: yegor256
          base: master
          commit-message: |
            The comment version hint in Cargo.toml is set, so we need to update the version in readme, and
            remove the version hint comment after Cargo.toml package.version field, and tag the new version
            to publish the it to `crates.io`.
